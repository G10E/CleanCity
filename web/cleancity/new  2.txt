var map;

function init() {
    map = new OpenLayers.Map("map",{projection:"EPSG:3857"});

    var osm = new OpenLayers.Layer.OSM();
    var toMercator = OpenLayers.Projection.transforms['EPSG:4326']['EPSG:3857'];
    var center = toMercator({x:-0.05,y:51.5});
    
    /**
     * Create 5 random vector features.  Your features would typically be fetched
     * from the server. The features are given an attribute named "foo".
     * The value of this attribute is an integer that ranges from 0 to 100.
     */   
    var features = [];    
    for(var i = 0; i < 5; i++) {
        features[i] = new OpenLayers.Feature.Vector(
                toMercator(new OpenLayers.Geometry.Point(
                    -0.040 - 0.05*Math.random(),
                    51.49 + 0.02*Math.random())), 
                {
                    foo : 100 * Math.random() | 0
                }, {
                    fillColor : '#008040',
                    fillOpacity : 0.8,                    
                    strokeColor : "#ee9900",
                    strokeOpacity : 1,
                    strokeWidth : 1,
                    pointRadius : 8
                });
    }
        
    // create the layer with listeners to create and destroy popups
    var vector = new OpenLayers.Layer.Vector("Points",{
        eventListeners:{
            'featureselected':function(evt){
                var feature = evt.feature;
                var popup = new OpenLayers.Popup.FramedCloud("popup",
                    OpenLayers.LonLat.fromString(feature.geometry.toShortString()),
                    null,
                    "<div style='font-size:.8em'>Feature: " + feature.id +"<br>Foo: " + feature.attributes.foo+"</div>",
                    null,
                    true
                );
                feature.popup = popup;
                map.addPopup(popup);
            },
            'featureunselected':function(evt){
                var feature = evt.feature;
                map.removePopup(feature.popup);
                feature.popup.destroy();
                feature.popup = null;
            }
        }
    });
    vector.addFeatures(features);

    // create the select feature control
    var selector = new OpenLayers.Control.SelectFeature(vector,{
        hover:true,
        autoActivate:true
    }); 
    
    map.addLayers([osm, vector]);
    map.addControl(selector);
    map.setCenter(new OpenLayers.LonLat(center.x,center.y), 13);
}


/*function init(){
				var map = new OpenLayers.Map("map");
				//create OSM raster layer and add to the map
				var osm = new OpenLayers.Layer.OSM();
				//map.addLayer(osm);
				//map.zoomToMaxExtent();
				//var b_marker = new OpenLayers.Layer.Markers("Bio Degradable");
				//var n_marker = new OpenLayers.Layer.Markers("Non-Bio Degradable");
				//map.addLayer(b_marker);
				//map.addLayer(n_marker);
				var size = new OpenLayers.Size(21,25);
				var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
				var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker.png',size,offset);
				var bIcon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker-green.png',size,offset);
				/*for(var i=0;i<type_array.length;i++){
					var lt = parseFloat(lat_array[i]);
					var ln = parseFloat(long_array[i]);
					var pt = new OpenLayers.LonLat(ln,lt).transform(
						new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
						map.getProjectionObject() // to Spherical Mercator
					  );
					if(type_array[i]=="Bio Degradable"){
						b_marker.addMarker(new OpenLayers.Marker(pt,bIcon.clone()));
					}
					else if(type_array[i]=="Non-Bio Degradable"){
						n_marker.addMarker(new OpenLayers.Marker(pt,icon.clone()));
					}
				}*/
				/*var features=[];
				for(var i=0;i<type_array.length;i++){
					var lt = parseFloat(lat_array[i]);
					var ln = parseFloat(long_array[i]);
					var pt = new OpenLayers.LonLat(ln,lt).transform(
						new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
						map.getProjectionObject() // to Spherical Mercator
					);
					features[i] = new OpenLayers.Feature.Vector((pt), 
					{
						foo : 'abc' | 0
					}, {
						fillColor : '#008040',
						fillOpacity : 0.8,                    
						strokeColor : "#ee9900",
						strokeOpacity : 1,
						strokeWidth : 1,
						pointRadius : 25
					});
				}*/
				/*var vector = new OpenLayers.Layer.Vector("Points",{
					eventListeners:{
						'featureselected':function(evt){
							var feature = evt.feature;
							var popup = new OpenLayers.Popup.FramedCloud("popup",
								OpenLayers.LonLat.fromString(feature.geometry.toShortString()),
								null,
								"<div style='font-size:.8em'>Feature: " + feature.id +"<br>Foo: " + feature.attributes.foo+"</div>",
								null,
								true
							);
							feature.popup = popup;
							map.addPopup(popup);
						},
						'featureunselected':function(evt){
							var feature = evt.feature;
							map.removePopup(feature.popup);
							feature.popup.destroy();
							feature.popup = null;
						}
					}
				});
				vector.addFeatures(features);				
				// create the select feature control
				var selector = new OpenLayers.Control.SelectFeature(vector,{
					hover:true,
					autoActivate:true
				});
				map.addLayers([osm, vector]);
				map.addControl(selector);
				var lonlat = new OpenLayers.LonLat(85.3219,27.7019).transform(
						new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
						map.getProjectionObject() // to Spherical Mercator
					  );
				var zoomlevel = 13;
				map.setCenter(lonlat,zoomlevel);
				
			}*/